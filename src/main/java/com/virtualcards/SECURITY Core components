ðŸ§± Core Components

1. SecurityConfig.java

    Uses SecurityFilterChain bean
    Disables session management
    Registers JWT filter
    Sets up endpoint access rules

2. JWTUtil.java

    Utility class for:

        Generating tokens
        Validating tokens
        Extracting claims (username, roles, expiration)

3. JWTAuthenticationFilter.java

    Custom filter that:

        Intercepts requests
        Extracts JWT from header
        Validates it
        Sets Authentication in the security context

4. AuthController.java

    POST /login: authenticates user and returns JWT
    POST /register: registers new users (with role USER by default)

5. AuthenticationRequest / AuthenticationResponse (DTOs)

    Simple payloads for login (username/password) and token response

6. User.java (Entity)

    Contains fields: id, username, password, roles
    Annotated with JPA

7. UserRepository.java

    Extends JpaRepository<User, Long>
    Includes findByUsername

8. UserDetailsServiceImpl.java

    Implements UserDetailsService
    Loads UserDetails from DB

9. UserDetailsImpl.java

    Implements UserDetails
    Wraps your User entity

10. PasswordEncoder Bean

    Usually BCryptPasswordEncoder
    For encoding passwords on register and validating on login